<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[GIGO]]></title>
  <link href="http://takaakik.github.io/atom.xml" rel="self"/>
  <link href="http://takaakik.github.io/"/>
  <updated>2014-06-12T19:02:01+09:00</updated>
  <id>http://takaakik.github.io/</id>
  <author>
    <name><![CDATA[Takaaki Kawakami]]></name>
    
  </author>

  
  <entry>
    <title type="html"><![CDATA[iOS Programming: The Big Nerd Ranch Guide in Swift]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/12/ios-programming-the-big-nerd-ranch-guide-in-swift/"/>
    <updated>2014-06-12T18:42:33+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/12/ios-programming-the-big-nerd-ranch-guide-in-swift</id>
    <content type="html"><![CDATA[<p><em>iOS Programming:The Big Nerd Ranch Guide, 4th Edition</em> seems to have a good reputation on some book reviews.
Upon reading, I&rsquo;m translating some example codes in Objective-C to Apple&rsquo;s new programming language Swift.</p>

<p>First chapter: Quiz app</p>

<p>AppDelegate.swift in Swift</p>

<pre><code>class AppDelegate: UIResponder, UIApplicationDelegate {

var window: UIWindow?


func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: NSDictionary?) -&gt; Bool {
    self.window = UIWindow(frame: UIScreen.mainScreen().bounds)
    // Override point for customization after application launch.

    var appBundle = NSBundle.mainBundle()
    var controller: QuizViewController = QuizViewController(nibName: "QuizViewController", bundle: appBundle)
    self.window!.rootViewController = controller

    self.window!.backgroundColor = UIColor.whiteColor()
    self.window!.makeKeyAndVisible()
    return true
}

-- snip --
</code></pre>

<p>QuizViewController.swift</p>

<pre><code>import UIKit

class QuizViewController: UIViewController {

    var currentQuestionIndex = 0
    var questions = [0: "From what awamori is made?", 1: "What is 7+8?", 2: "What is the capital of Hyogo?",]
    var answers = [0: "Sugar canes", 1: "15", 2: "Kobe",]

    @IBOutlet var questionLabel: UILabel
    @IBOutlet var answerLabel: UILabel

-- snip --


    @IBAction func showQuestion(AnyObject) {
        // Step to the next question
        currentQuestionIndex++

        // Am I past the last question?
        if (currentQuestionIndex == questions.count) {
            // Go back to the first question
            currentQuestionIndex = 0;
        }

        // Get the string at that index in the question array
        var question = questions[currentQuestionIndex]

        // Display the string in the question label
        questionLabel.text = question

        // Reset th answer label
        answerLabel.text = "???"
    }

    @IBAction func showAnswer(AnyObject) {
        // What is the answer to the current question?
        var answer = answers[currentQuestionIndex]

        // Display it in the answer label
        answerLabel.text = answer;
    }

}
</code></pre>
]]></content>
  </entry>
  
</feed>
