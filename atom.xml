<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[GIGO]]></title>
  <link href="http://takaakik.github.io/atom.xml" rel="self"/>
  <link href="http://takaakik.github.io/"/>
  <updated>2014-06-27T17:48:05+09:00</updated>
  <id>http://takaakik.github.io/</id>
  <author>
    <name><![CDATA[Takaaki Kawakami]]></name>
    
  </author>

  
  <entry>
    <title type="html"><![CDATA[Chapter 10 UINavigationController part2]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/27/chapter-10-uinavigationcontroller-part2/"/>
    <updated>2014-06-27T17:44:35+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/27/chapter-10-uinavigationcontroller-part2</id>
    <content type="html"><![CDATA[<h2>UINavigationBar</h2>

<p>SwiftBNRItemViewController.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRItemViewController:</span> <span class="n">UITableViewController</span><span class="p">,</span> <span class="n">UITableViewDataSource</span><span class="p">,</span> <span class="n">UITableViewDelegate</span>  <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// http://forums.bignerdranch.com/viewtopic.php?f=489&amp;t=8939</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// All instances of TableViewController should use UITableViewStyle.Plain</span>
</span><span class='line'>    <span class="c1">// and this initializer</span>
</span><span class='line'>    <span class="n">convenience</span> <span class="n">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">style:</span> <span class="n">UITableViewStyle</span><span class="p">.</span><span class="n">Plain</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">navItem</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">navigationItem</span><span class="p">;</span>
</span><span class='line'>        <span class="n">navItem</span><span class="p">.</span><span class="n">title</span> <span class="o">=</span> <span class="s">&quot;Homepwner&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">bbi</span> <span class="o">=</span> <span class="n">UIBarButtonItem</span><span class="p">(</span><span class="nl">barButtonSystemItem:</span> <span class="n">UIBarButtonSystemItem</span><span class="p">.</span><span class="n">Add</span><span class="p">,</span> <span class="nl">target:</span> <span class="n">self</span><span class="p">,</span> <span class="nl">action:</span> <span class="s">&quot;addNewItem:&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">navItem</span><span class="p">.</span><span class="n">rightBarButtonItem</span> <span class="o">=</span> <span class="n">bbi</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">navItem</span><span class="p">.</span><span class="n">leftBarButtonItem</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">editButtonItem</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">    // should be using this, but use of UITableViewController.init(style:) has a</span>
</span><span class='line'><span class="cm">    // bug where it accidentally calls &quot;unimplemented initializer &#39;init(nibName:bundle:)&quot;</span>
</span><span class='line'><span class="cm">    init() {</span>
</span><span class='line'><span class="cm">        super.init(style: UITableViewStyle.Plain)</span>
</span><span class='line'><span class="cm">    }</span>
</span><span class='line'><span class="cm">    */</span>
</span></code></pre></td></tr></table></div></figure>


<p>SwiftBNRDetailViewController.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRDetailViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="o">--</span> <span class="n">snip</span> <span class="o">--</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewWillAppear</span><span class="p">(</span><span class="nl">animated:</span> <span class="n">Bool</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">viewWillAppear</span><span class="p">(</span><span class="n">animated</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">navigationItem</span><span class="p">.</span><span class="n">title</span> <span class="o">=</span> <span class="n">item</span><span class="p">.</span><span class="n">itemName</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">nameField</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">item</span><span class="p">.</span><span class="n">itemName</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">serialNumberField</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">item</span><span class="p">.</span><span class="n">serialNumber</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">valueField</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">&quot;\(item.valueInDollars)&quot;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">dateFormatter</span> <span class="o">=</span> <span class="n">NSDateFormatter</span><span class="p">()</span>
</span><span class='line'>        <span class="n">dateFormatter</span><span class="p">.</span><span class="n">dateStyle</span> <span class="o">=</span> <span class="p">.</span><span class="n">MediumStyle</span>
</span><span class='line'>        <span class="n">dateFormatter</span><span class="p">.</span><span class="n">timeStyle</span> <span class="o">=</span> <span class="p">.</span><span class="n">NoStyle</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">dateLabel</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">&quot;\(dateFormatter.stringFromDate(item.createDate))&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 10 UINavigationController part1]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/26/chapter-10-uinavigationcontroller-part1/"/>
    <updated>2014-06-26T18:47:20+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/26/chapter-10-uinavigationcontroller-part1</id>
    <content type="html"><![CDATA[<h2>Additional UIViewController</h2>

<p>SwiftBNRItemViewController.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRItemViewController:</span> <span class="n">UITableViewController</span><span class="p">,</span> <span class="n">UITableViewDataSource</span><span class="p">,</span> <span class="n">UITableViewDelegate</span>  <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="o">--</span> <span class="n">snip</span> <span class="o">--</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">tableView</span><span class="p">(</span><span class="nl">tableView:</span> <span class="n">UITableView</span><span class="o">!</span><span class="p">,</span> <span class="n">didSelectRowAtIndexPath</span> <span class="nl">indexPath:</span> <span class="n">NSIndexPath</span><span class="o">!</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">detailViewController</span> <span class="o">=</span> <span class="n">SwiftBNRDetailViewController</span><span class="p">(</span><span class="nl">nibName:</span> <span class="s">&quot;SwiftBNRDetailViewController&quot;</span><span class="p">,</span> <span class="nl">bundle:</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="n">items</span> <span class="o">=</span> <span class="n">SwiftBNRItemStore</span><span class="p">.</span><span class="n">sharedStore</span><span class="p">.</span><span class="n">allItems</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">selectedItem</span> <span class="o">=</span> <span class="n">items</span><span class="p">[</span><span class="n">indexPath</span><span class="p">.</span><span class="n">row</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">detailViewController</span><span class="p">.</span><span class="n">item</span> <span class="o">=</span> <span class="n">selectedItem</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">navigationController</span><span class="p">.</span><span class="n">pushViewController</span><span class="p">(</span><span class="n">detailViewController</span><span class="p">,</span> <span class="nl">animated:</span> <span class="n">true</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewWillAppear</span><span class="p">(</span><span class="nl">animated:</span> <span class="n">Bool</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">viewWillAppear</span><span class="p">(</span><span class="n">animated</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">.</span><span class="n">reloadData</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>SwiftBNRDetailViewController.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRDetailViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">var</span> <span class="n">nameField</span> <span class="o">:</span> <span class="n">UITextField</span>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">var</span> <span class="n">serialNumberField</span> <span class="o">:</span> <span class="n">UITextField</span>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">var</span> <span class="n">valueField</span> <span class="o">:</span> <span class="n">UITextField</span>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">var</span> <span class="n">dateLabel</span> <span class="o">:</span> <span class="n">UILabel</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="n">item</span> <span class="o">:</span> <span class="n">SwiftBNRItem</span> <span class="o">=</span> <span class="n">SwiftBNRItem</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">init</span><span class="p">(</span><span class="n">nibName</span> <span class="nl">nibNameOrNil:</span> <span class="n">String</span><span class="o">?</span><span class="p">,</span> <span class="n">bundle</span> <span class="nl">nibBundleOrNil:</span> <span class="n">NSBundle</span><span class="o">?</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">nibName:</span> <span class="n">nibNameOrNil</span><span class="p">,</span> <span class="nl">bundle:</span> <span class="n">nibBundleOrNil</span><span class="p">)</span>
</span><span class='line'>        <span class="c1">// Custom initialization</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Do any additional setup after loading the view.</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewWillAppear</span><span class="p">(</span><span class="nl">animated:</span> <span class="n">Bool</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">viewWillAppear</span><span class="p">(</span><span class="n">animated</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">nameField</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">item</span><span class="p">.</span><span class="n">itemName</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">serialNumberField</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">item</span><span class="p">.</span><span class="n">serialNumber</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">valueField</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">&quot;\(item.valueInDollars)&quot;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">dateFormatter</span> <span class="o">=</span> <span class="n">NSDateFormatter</span><span class="p">()</span>
</span><span class='line'>        <span class="n">dateFormatter</span><span class="p">.</span><span class="n">dateStyle</span> <span class="o">=</span> <span class="p">.</span><span class="n">MediumStyle</span>
</span><span class='line'>        <span class="n">dateFormatter</span><span class="p">.</span><span class="n">timeStyle</span> <span class="o">=</span> <span class="p">.</span><span class="n">NoStyle</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">dateLabel</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">&quot;\(dateFormatter.stringFromDate(item.createDate))&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewWillDisappear</span><span class="p">(</span><span class="nl">animated:</span> <span class="n">Bool</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">viewWillDisappear</span><span class="p">(</span><span class="n">animated</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">endEditing</span><span class="p">(</span><span class="n">true</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">item</span><span class="p">.</span><span class="n">itemName</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">nameField</span><span class="p">.</span><span class="n">text</span>
</span><span class='line'>        <span class="n">item</span><span class="p">.</span><span class="n">serialNumber</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">serialNumberField</span><span class="p">.</span><span class="n">text</span>
</span><span class='line'>        <span class="n">item</span><span class="p">.</span><span class="n">valueInDollars</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">valueField</span><span class="p">.</span><span class="n">text</span><span class="p">.</span><span class="n">toInt</span><span class="p">()</span><span class="o">!</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 9 Editing UITableView]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/24/chapter-9-editing-uitableview/"/>
    <updated>2014-06-24T18:34:12+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/24/chapter-9-editing-uitableview</id>
    <content type="html"><![CDATA[<p>SwiftBNRItemViewController.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRItemViewController:</span> <span class="n">UITableViewController</span><span class="p">,</span> <span class="n">UITableViewDataSource</span><span class="p">,</span> <span class="n">UITableViewDelegate</span>  <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// http://forums.bignerdranch.com/viewtopic.php?f=489&amp;t=8939</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// All instances of TableViewController should use UITableViewStyle.Plain</span>
</span><span class='line'>    <span class="c1">// and this initializer</span>
</span><span class='line'>    <span class="n">convenience</span> <span class="n">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">style:</span> <span class="n">UITableViewStyle</span><span class="p">.</span><span class="n">Plain</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">    // should be using this, but use of UITableViewController.init(style:) has a</span>
</span><span class='line'><span class="cm">    // bug where it accidentally calls &quot;unimplemented initializer &#39;init(nibName:bundle:)&quot;</span>
</span><span class='line'><span class="cm">    init() {</span>
</span><span class='line'><span class="cm">        super.init(style: UITableViewStyle.Plain)</span>
</span><span class='line'><span class="cm">    }</span>
</span><span class='line'><span class="cm">    */</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">.</span><span class="n">registerClass</span><span class="p">(</span><span class="n">UITableViewCell</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">forCellReuseIdentifier:</span> <span class="s">&quot;UITableViewCell&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">.</span><span class="n">tableHeaderView</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">headerView</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">tableView</span><span class="p">(</span><span class="nl">tableView:</span> <span class="n">UITableView</span><span class="o">!</span><span class="p">,</span> <span class="n">numberOfRowsInSection</span> <span class="nl">section:</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">SwiftBNRItemStore</span><span class="p">.</span><span class="n">sharedStore</span><span class="p">.</span><span class="n">allItems</span><span class="p">.</span><span class="n">count</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">tableView</span><span class="p">(</span><span class="nl">tableView:</span> <span class="n">UITableView</span><span class="o">!</span><span class="p">,</span> <span class="n">cellForRowAtIndexPath</span> <span class="nl">indexPath:</span><span class="n">NSIndexPath</span><span class="o">!</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">UITableViewCell</span><span class="o">!</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">//let cell = UITableViewCell(style: UITableViewCellStyle.Default, reuseIdentifier: &quot;UITableViewCell&quot;)</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">cell</span> <span class="o">:</span> <span class="n">UITableViewCell</span> <span class="o">=</span> <span class="n">tableView</span><span class="p">.</span><span class="n">dequeueReusableCellWithIdentifier</span><span class="p">(</span><span class="s">&quot;UITableViewCell&quot;</span><span class="p">,</span> <span class="nl">forIndexPath:</span> <span class="n">indexPath</span><span class="p">)</span> <span class="n">as</span> <span class="n">UITableViewCell</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">items</span> <span class="o">=</span> <span class="n">SwiftBNRItemStore</span><span class="p">.</span><span class="n">sharedStore</span><span class="p">.</span><span class="n">allItems</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">item</span> <span class="o">=</span> <span class="n">SwiftBNRItem</span><span class="p">()</span>
</span><span class='line'>        <span class="n">item</span> <span class="o">=</span> <span class="n">items</span><span class="p">[</span><span class="n">indexPath</span><span class="p">.</span><span class="n">row</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">cell</span><span class="p">.</span><span class="n">textLabel</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">item</span><span class="p">.</span><span class="n">description</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">cell</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">tableView</span><span class="p">(</span><span class="nl">tableView:</span> <span class="n">UITableView</span><span class="o">!</span><span class="p">,</span> <span class="n">commitEditingStyle</span> <span class="nl">editingStyle:</span><span class="n">UITableViewCellEditingStyle</span><span class="p">,</span> <span class="n">forRowAtIndexPath</span> <span class="nl">indexPath:</span><span class="n">NSIndexPath</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">editingStyle</span> <span class="o">==</span> <span class="n">UITableViewCellEditingStyle</span><span class="p">.</span><span class="n">Delete</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">var</span> <span class="n">items</span> <span class="o">=</span> <span class="n">SwiftBNRItemStore</span><span class="p">.</span><span class="n">sharedStore</span><span class="p">.</span><span class="n">allItems</span>
</span><span class='line'>            <span class="n">var</span> <span class="n">item</span> <span class="o">=</span> <span class="n">SwiftBNRItem</span><span class="p">()</span>
</span><span class='line'>            <span class="n">item</span> <span class="o">=</span> <span class="n">items</span><span class="p">[</span><span class="n">indexPath</span><span class="p">.</span><span class="n">row</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">SwiftBNRItemStore</span><span class="p">.</span><span class="n">sharedStore</span><span class="p">.</span><span class="n">removeItem</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">.</span><span class="n">deleteRowsAtIndexPaths</span><span class="p">([</span><span class="n">indexPath</span><span class="p">],</span> <span class="nl">withRowAnimation:</span> <span class="n">UITableViewRowAnimation</span><span class="p">.</span><span class="n">Fade</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">tableView</span><span class="p">(</span><span class="nl">tableView:</span> <span class="n">UITableView</span><span class="o">!</span><span class="p">,</span> <span class="n">moveRowAtIndexPath</span> <span class="nl">sourceIndexPath:</span><span class="n">NSIndexPath</span><span class="p">,</span> <span class="n">toIndexPath</span> <span class="nl">destinationIndexPath:</span><span class="n">NSIndexPath</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">SwiftBNRItemStore</span><span class="p">.</span><span class="n">sharedStore</span><span class="p">.</span><span class="n">moveItemAtIndex</span><span class="p">(</span><span class="n">sourceIndexPath</span><span class="p">.</span><span class="n">row</span><span class="p">,</span> <span class="nl">toIndex:</span> <span class="n">destinationIndexPath</span><span class="p">.</span><span class="n">row</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="n">_headerView</span> <span class="o">:</span> <span class="n">UIView</span><span class="o">?</span> <span class="o">=</span> <span class="nb">nil</span>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">var</span> <span class="n">headerView</span> <span class="o">:</span> <span class="n">UIView</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">get</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">!</span><span class="n">_headerView</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">NSBundle</span><span class="p">.</span><span class="n">mainBundle</span><span class="p">().</span><span class="n">loadNibNamed</span><span class="p">(</span><span class="s">&quot;HeaderView&quot;</span><span class="p">,</span> <span class="nl">owner:</span> <span class="n">self</span><span class="p">,</span> <span class="nl">options:</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">_headerView</span><span class="o">!</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">set</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">_headerView</span> <span class="o">=</span> <span class="n">newValue</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBAction</span> <span class="n">func</span> <span class="n">addNewItem</span><span class="p">(</span><span class="nl">sender:</span> <span class="n">AnyObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">newItem</span> <span class="o">=</span> <span class="n">SwiftBNRItemStore</span><span class="p">.</span><span class="n">sharedStore</span><span class="p">.</span><span class="n">createItem</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">lastRow</span> <span class="o">=</span> <span class="n">SwiftBNRItemStore</span><span class="p">.</span><span class="n">sharedStore</span><span class="p">.</span><span class="n">allItems</span><span class="p">.</span><span class="n">indexOf</span><span class="p">(</span><span class="nl">object:</span> <span class="n">newItem</span><span class="p">)</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">indexPath</span> <span class="o">=</span> <span class="n">NSIndexPath</span><span class="p">(</span><span class="nl">forRow:</span> <span class="n">lastRow</span><span class="p">,</span> <span class="nl">inSection:</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">.</span><span class="n">insertRowsAtIndexPaths</span><span class="p">([</span><span class="n">indexPath</span><span class="p">],</span> <span class="nl">withRowAnimation:</span> <span class="n">UITableViewRowAnimation</span><span class="p">.</span><span class="n">Top</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBAction</span> <span class="n">func</span> <span class="n">toggleEditingMode</span><span class="p">(</span><span class="nl">sender:</span> <span class="n">AnyObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">editing</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">sender</span><span class="p">.</span><span class="n">setTitle</span><span class="p">(</span><span class="s">&quot;Edit&quot;</span><span class="p">,</span> <span class="nl">forState:</span> <span class="n">UIControlState</span><span class="p">.</span><span class="n">Normal</span><span class="p">)</span>
</span><span class='line'>            <span class="n">self</span><span class="p">.</span><span class="n">setEditing</span><span class="p">(</span><span class="n">false</span><span class="p">,</span> <span class="nl">animated:</span><span class="n">true</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">sender</span><span class="p">.</span><span class="n">setTitle</span><span class="p">(</span><span class="s">&quot;Done&quot;</span><span class="p">,</span> <span class="nl">forState:</span> <span class="n">UIControlState</span><span class="p">.</span><span class="n">Normal</span><span class="p">)</span>
</span><span class='line'>            <span class="n">self</span><span class="p">.</span><span class="n">setEditing</span><span class="p">(</span><span class="n">true</span><span class="p">,</span> <span class="nl">animated:</span><span class="n">true</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>SwiftBNRItemStore.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// http://forums.bignerdranch.com/viewtopic.php?f=490&amp;t=8942</span>
</span><span class='line'>
</span><span class='line'><span class="n">import</span> <span class="n">Foundation</span>
</span><span class='line'><span class="n">extension</span> <span class="n">Array</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">func</span> <span class="n">indexOf</span><span class="p">(</span><span class="err">#</span><span class="nl">object:</span><span class="n">AnyObject</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">self</span><span class="p">.</span><span class="n">bridgeToObjectiveC</span><span class="p">().</span><span class="n">indexOfObject</span><span class="p">(</span><span class="n">object</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">let</span> <span class="n">_GlobalItemStoreSharedInstance</span> <span class="o">=</span> <span class="n">SwiftBNRItemStore</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRItemStore:</span> <span class="n">NSObject</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">class</span> <span class="n">var</span> <span class="n">sharedStore</span> <span class="o">:</span> <span class="n">SwiftBNRItemStore</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">_GlobalItemStoreSharedInstance</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="n">_privateItems</span> <span class="o">=</span> <span class="n">SwiftBNRItem</span><span class="p">[]()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="nl">allItems:</span> <span class="n">SwiftBNRItem</span><span class="p">[]</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">_privateItems</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">createItem</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">SwiftBNRItem</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">item</span> <span class="o">=</span> <span class="n">SwiftBNRItem</span><span class="p">.</span><span class="n">randomItem</span><span class="p">()</span>
</span><span class='line'>        <span class="n">_privateItems</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">item</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">removeItem</span><span class="p">(</span><span class="nl">item:</span> <span class="n">SwiftBNRItem</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">element</span><span class="p">)</span> <span class="k">in</span> <span class="n">enumerate</span><span class="p">(</span><span class="n">_privateItems</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="n">element</span> <span class="o">===</span> <span class="n">item</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">_privateItems</span><span class="p">.</span><span class="n">removeAtIndex</span><span class="p">(</span><span class="n">index</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">moveItemAtIndex</span><span class="p">(</span><span class="nl">fromIndex:</span> <span class="n">Int</span><span class="p">,</span> <span class="nl">toIndex:</span> <span class="n">Int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">fromIndex</span> <span class="o">==</span> <span class="n">toIndex</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">item</span> <span class="o">=</span> <span class="n">_privateItems</span><span class="p">[</span><span class="n">fromIndex</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">_privateItems</span><span class="p">.</span><span class="n">removeAtIndex</span><span class="p">(</span><span class="n">fromIndex</span><span class="p">)</span>
</span><span class='line'>        <span class="n">_privateItems</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="nl">atIndex:</span> <span class="n">toIndex</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 8 UITableView and UITableViewController]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/24/chapter-8-uitableview-and-uitableviewcontroller/"/>
    <updated>2014-06-24T13:14:59+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/24/chapter-8-uitableview-and-uitableviewcontroller</id>
    <content type="html"><![CDATA[<p>AppDelegate.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">UIApplicationMain</span>
</span><span class='line'><span class="n">class</span> <span class="nl">AppDelegate:</span> <span class="n">UIResponder</span><span class="p">,</span> <span class="n">UIApplicationDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="nl">window:</span> <span class="n">UIWindow</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">application</span><span class="p">(</span><span class="nl">application:</span> <span class="n">UIApplication</span><span class="p">,</span> <span class="n">didFinishLaunchingWithOptions</span> <span class="nl">launchOptions:</span> <span class="n">NSDictionary</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span> <span class="o">=</span> <span class="n">UIWindow</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">UIScreen</span><span class="p">.</span><span class="n">mainScreen</span><span class="p">().</span><span class="n">bounds</span><span class="p">)</span>
</span><span class='line'>        <span class="c1">// Override point for customization after application launch.</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">itemViewController</span> <span class="o">=</span> <span class="n">SwiftBNRItemViewController</span><span class="p">()</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">rootViewController</span> <span class="o">=</span> <span class="n">itemViewController</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">whiteColor</span><span class="p">()</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">makeKeyAndVisible</span><span class="p">()</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>SwiftBNRItemViewController.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRItemViewController:</span> <span class="n">UITableViewController</span><span class="p">,</span> <span class="n">UITableViewDataSource</span><span class="p">,</span> <span class="n">UITableViewDelegate</span>  <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// http://forums.bignerdranch.com/viewtopic.php?f=489&amp;t=8939</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// All instances of TableViewController should use UITableViewStyle.Plain</span>
</span><span class='line'>    <span class="c1">// and this initializer</span>
</span><span class='line'>    <span class="n">convenience</span> <span class="n">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">style:</span> <span class="n">UITableViewStyle</span><span class="p">.</span><span class="n">Plain</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Initialize the ItemStore to have 5 random items</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">_</span> <span class="k">in</span> <span class="mf">0..5</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">SwiftBNRItemStore</span><span class="p">.</span><span class="n">sharedStore</span><span class="p">.</span><span class="n">createItem</span><span class="p">()</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">    // should be using this, but use of UITableViewController.init(style:) has a</span>
</span><span class='line'><span class="cm">    // bug where it accidentally calls &quot;unimplemented initializer &#39;init(nibName:bundle:)&quot;</span>
</span><span class='line'><span class="cm">    init() {</span>
</span><span class='line'><span class="cm">        super.init(style: UITableViewStyle.Plain)</span>
</span><span class='line'><span class="cm">    }*/</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">.</span><span class="n">registerClass</span><span class="p">(</span><span class="n">UITableViewCell</span><span class="p">.</span><span class="n">self</span><span class="p">,</span> <span class="nl">forCellReuseIdentifier:</span> <span class="s">&quot;UITableViewCell&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">tableView</span><span class="p">(</span><span class="nl">tableView:</span> <span class="n">UITableView</span><span class="o">!</span><span class="p">,</span> <span class="n">numberOfRowsInSection</span> <span class="nl">section:</span> <span class="n">Int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Int</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">SwiftBNRItemStore</span><span class="p">.</span><span class="n">sharedStore</span><span class="p">.</span><span class="n">allItems</span><span class="p">.</span><span class="n">count</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">tableView</span><span class="p">(</span><span class="nl">tableView:</span> <span class="n">UITableView</span><span class="o">!</span><span class="p">,</span> <span class="n">cellForRowAtIndexPath</span> <span class="nl">indexPath:</span><span class="n">NSIndexPath</span><span class="o">!</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">UITableViewCell</span><span class="o">!</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">//let cell = UITableViewCell(style: UITableViewCellStyle.Default, reuseIdentifier: &quot;UITableViewCell&quot;)</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">cell</span> <span class="o">:</span> <span class="n">UITableViewCell</span> <span class="o">=</span> <span class="n">tableView</span><span class="p">.</span><span class="n">dequeueReusableCellWithIdentifier</span><span class="p">(</span><span class="s">&quot;UITableViewCell&quot;</span><span class="p">,</span> <span class="nl">forIndexPath:</span> <span class="n">indexPath</span><span class="p">)</span> <span class="n">as</span> <span class="n">UITableViewCell</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">items</span> <span class="o">=</span> <span class="n">SwiftBNRItemStore</span><span class="p">.</span><span class="n">sharedStore</span><span class="p">.</span><span class="n">allItems</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">item</span> <span class="o">=</span> <span class="n">SwiftBNRItem</span><span class="p">()</span>
</span><span class='line'>        <span class="n">item</span> <span class="o">=</span> <span class="n">items</span><span class="p">[</span><span class="n">indexPath</span><span class="p">.</span><span class="n">row</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">cell</span><span class="p">.</span><span class="n">textLabel</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">item</span><span class="p">.</span><span class="n">description</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">cell</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>SwiftBNRItemStore.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">let</span> <span class="n">_GlobalItemStoreSharedInstance</span> <span class="o">=</span> <span class="n">SwiftBNRItemStore</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRItemStore:</span> <span class="n">NSObject</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">class</span> <span class="n">var</span> <span class="n">sharedStore</span> <span class="o">:</span> <span class="n">SwiftBNRItemStore</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">_GlobalItemStoreSharedInstance</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="n">_privateItems</span> <span class="o">=</span> <span class="n">SwiftBNRItem</span><span class="p">[]()</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="nl">allItems:</span> <span class="n">SwiftBNRItem</span><span class="p">[]</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">_privateItems</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">createItem</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">SwiftBNRItem</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">item</span> <span class="o">=</span> <span class="n">SwiftBNRItem</span><span class="p">.</span><span class="n">randomItem</span><span class="p">()</span>
</span><span class='line'>        <span class="n">_privateItems</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">item</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 7 Delegation and Text Input part1]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/20/chapter-7-delegation-and-text-input-part1/"/>
    <updated>2014-06-20T18:34:09+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/20/chapter-7-delegation-and-text-input-part1</id>
    <content type="html"><![CDATA[<h2>Adding the Labels to the Screen</h2>

<h2>Motion Effects</h2>

<p>SwiftBNRHypnosisViewController.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRHypnosisViewController:</span> <span class="n">UIViewController</span><span class="p">,</span> <span class="n">UITextFieldDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="o">--</span> <span class="n">snip</span> <span class="o">--</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">textFieldShouldReturn</span><span class="p">(</span><span class="nl">textField:</span> <span class="n">UITextField</span><span class="o">!</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">println</span><span class="p">(</span><span class="s">&quot;\(textField.text)&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">drawHypnoticMessage</span><span class="p">(</span><span class="n">textField</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">textField</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>        <span class="n">textField</span><span class="p">.</span><span class="n">resignFirstResponder</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">drawHypnoticMessage</span><span class="p">(</span><span class="nl">message:</span> <span class="n">NSString</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="n">var</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">20</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">var</span> <span class="n">messageLabel</span> <span class="o">=</span> <span class="n">UILabel</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">messageLabel</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">clearColor</span><span class="p">()</span>
</span><span class='line'>            <span class="n">messageLabel</span><span class="p">.</span><span class="n">textColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">whiteColor</span><span class="p">();</span>
</span><span class='line'>            <span class="n">messageLabel</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">message</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">messageLabel</span><span class="p">.</span><span class="n">sizeToFit</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">var</span> <span class="n">width</span> <span class="o">=</span> <span class="n">UInt32</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">-</span> <span class="n">messageLabel</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">);</span>
</span><span class='line'>            <span class="n">var</span> <span class="n">x</span> <span class="o">=</span> <span class="n">Int</span><span class="p">(</span><span class="n">arc4random</span><span class="p">()</span> <span class="o">%</span> <span class="n">width</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">var</span> <span class="n">height</span> <span class="o">=</span> <span class="n">UInt32</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">-</span> <span class="n">messageLabel</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">);</span>
</span><span class='line'>            <span class="n">var</span> <span class="n">y</span> <span class="o">=</span> <span class="n">Int</span><span class="p">(</span><span class="n">arc4random</span><span class="p">()</span> <span class="o">%</span> <span class="n">height</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">var</span> <span class="n">frame</span> <span class="o">=</span> <span class="n">messageLabel</span><span class="p">.</span><span class="n">frame</span>
</span><span class='line'>            <span class="n">frame</span><span class="p">.</span><span class="n">origin</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="n">CGFloat</span><span class="p">(</span><span class="n">y</span><span class="p">))</span>
</span><span class='line'>            <span class="n">messageLabel</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">frame</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">addSubview</span><span class="p">(</span><span class="n">messageLabel</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">var</span> <span class="n">motionEffect</span> <span class="o">=</span> <span class="n">UIInterpolatingMotionEffect</span><span class="p">(</span><span class="nl">keyPath:</span> <span class="s">&quot;center.x&quot;</span><span class="p">,</span> <span class="nl">type:</span> <span class="n">UIInterpolatingMotionEffectType</span><span class="p">.</span><span class="n">TiltAlongHorizontalAxis</span><span class="p">)</span>
</span><span class='line'>            <span class="n">motionEffect</span><span class="p">.</span><span class="n">minimumRelativeValue</span> <span class="o">=</span> <span class="o">-</span><span class="mi">25</span><span class="p">;</span>
</span><span class='line'>            <span class="n">motionEffect</span><span class="p">.</span><span class="n">maximumRelativeValue</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
</span><span class='line'>            <span class="n">messageLabel</span><span class="p">.</span><span class="n">addMotionEffect</span><span class="p">(</span><span class="n">motionEffect</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">motionEffect</span> <span class="o">=</span> <span class="n">UIInterpolatingMotionEffect</span><span class="p">(</span><span class="nl">keyPath:</span> <span class="s">&quot;center.y&quot;</span><span class="p">,</span> <span class="nl">type:</span> <span class="n">UIInterpolatingMotionEffectType</span><span class="p">.</span><span class="n">TiltAlongVerticalAxis</span><span class="p">)</span>
</span><span class='line'>            <span class="n">motionEffect</span><span class="p">.</span><span class="n">minimumRelativeValue</span> <span class="o">=</span> <span class="o">-</span><span class="mi">25</span><span class="p">;</span>
</span><span class='line'>            <span class="n">motionEffect</span><span class="p">.</span><span class="n">maximumRelativeValue</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
</span><span class='line'>            <span class="n">messageLabel</span><span class="p">.</span><span class="n">addMotionEffect</span><span class="p">(</span><span class="n">motionEffect</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 6 View Controllers part6]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/20/chapter-6-view-controllers-part6/"/>
    <updated>2014-06-20T13:54:56+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/20/chapter-6-view-controllers-part6</id>
    <content type="html"><![CDATA[<h2>Loaded and Appearing Views</h2>

<p>SwiftBNRReminderViewController.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRReminderViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="o">--</span> <span class="n">snip</span> <span class="o">--</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">(){</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">println</span><span class="p">(</span><span class="s">&quot;SwiftBNRReminderViewController loaded its view.&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewWillAppear</span><span class="p">(</span><span class="nl">animated:</span> <span class="n">Bool</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">viewWillAppear</span><span class="p">(</span><span class="n">animated</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">datePicker</span><span class="p">.</span><span class="n">minimumDate</span> <span class="o">=</span> <span class="n">NSDate</span><span class="p">(</span><span class="nl">timeIntervalSinceNow:</span> <span class="mi">60</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>SwiftBNRHypnosisViewController.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRHypnosisViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="o">--</span> <span class="n">snip</span> <span class="o">--</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">viewDidLoad</span><span class="p">(){</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">viewDidLoad</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">println</span><span class="p">(</span><span class="s">&quot;SwiftBNRHypnosisViewController loaded its view.&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 6 View Controllers part5]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/20/chapter-6-view-controllers-part5/"/>
    <updated>2014-06-20T13:29:16+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/20/chapter-6-view-controllers-part5</id>
    <content type="html"><![CDATA[<h2>Adding a Local Notification</h2>

<p>SwiftBNRReminderViewController.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRReminderViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="o">--</span> <span class="n">snip</span> <span class="o">--</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBAction</span> <span class="n">func</span> <span class="n">addReminder</span><span class="p">(</span><span class="n">AnyObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">var</span> <span class="nl">date:</span> <span class="n">NSDate</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">datePicker</span><span class="p">.</span><span class="n">date</span><span class="p">;</span>
</span><span class='line'>        <span class="n">println</span><span class="p">(</span><span class="s">&quot;Setting a reminder for \(date)&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="n">note</span> <span class="o">=</span> <span class="n">UILocalNotification</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">note</span><span class="p">.</span><span class="n">alertBody</span> <span class="o">=</span> <span class="s">&quot;Hypnotise me!&quot;</span>
</span><span class='line'>        <span class="n">note</span><span class="p">.</span><span class="n">fireDate</span> <span class="o">=</span> <span class="n">date</span>
</span><span class='line'>        <span class="n">UIApplication</span><span class="p">.</span><span class="n">sharedApplication</span><span class="p">().</span><span class="n">scheduleLocalNotification</span><span class="p">(</span><span class="n">note</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>AppDelegate.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">UIApplicationMain</span>
</span><span class='line'><span class="n">class</span> <span class="nl">AppDelegate:</span> <span class="n">UIResponder</span><span class="p">,</span> <span class="n">UIApplicationDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="nl">window:</span> <span class="n">UIWindow</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">application</span><span class="p">(</span><span class="nl">application:</span> <span class="n">UIApplication</span><span class="p">,</span> <span class="n">didFinishLaunchingWithOptions</span> <span class="nl">launchOptions:</span> <span class="n">NSDictionary</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span> <span class="o">=</span> <span class="n">UIWindow</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">UIScreen</span><span class="p">.</span><span class="n">mainScreen</span><span class="p">().</span><span class="n">bounds</span><span class="p">)</span>
</span><span class='line'>        <span class="c1">// Override point for customization after application launch.</span>
</span><span class='line'>        <span class="n">application</span><span class="p">.</span><span class="n">registerUserNotificationSettings</span><span class="p">(</span><span class="n">UIUserNotificationSettings</span><span class="p">(</span><span class="nl">forTypes:</span> <span class="n">UIUserNotificationType</span><span class="p">.</span><span class="n">Sound</span> <span class="o">|</span> <span class="n">UIUserNotificationType</span><span class="p">.</span><span class="n">Alert</span> <span class="o">|</span>
</span><span class='line'>            <span class="n">UIUserNotificationType</span><span class="p">.</span><span class="n">Badge</span><span class="p">,</span> <span class="nl">categories:</span> <span class="nb">nil</span>
</span><span class='line'>            <span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 6 View Controllers part4 in Objective-C]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/20/chapter-6-view-controllers-part4-in-objective-c/"/>
    <updated>2014-06-20T13:10:32+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/20/chapter-6-view-controllers-part4-in-objective-c</id>
    <content type="html"><![CDATA[<h2>Adding a Local Notification</h2>

<p>Objective-C code in the book didn&rsquo;t work, sending error like</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2014-06-19 18:52:21.223 HypnoNerd[8232:143698] Attempting to schedule a local notification &lt;UIConcreteLocalNotification: 0xb88a190&gt;{fire date = Thursday, June 19, 2014 at 6:53:17 PM Japan Standard Time, time zone = (null), repeat interval = 0, repeat count = UILocalNotificationInfiniteRepeatCount, next fire date = Thursday, June 19, 2014 at 6:53:17 PM Japan Standard Time, user info = (null)} with an alert but haven't received permission from the user to display alerts</span></code></pre></td></tr></table></div></figure>


<p>In AppDelegate.m, you need to write to ask the user for the permission</p>

<p><a href="http://stackoverflow.com/questions/24100313/ask-for-user-permission-to-recieve-local-notifications-on-ios">Ask for User Permission to Recieve Local Notifications on iOS</a></p>

<p><a href="http://stackoverflow.com/questions/24006998/implicit-conversion-of-unsigned-long-uiusernotificationsettings-is-disallow]">implicit conversion of &lsquo;unsigned long &#8216;UIUserNotificationSettings *&rsquo; is disallowed with arc</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">application:</span><span class="p">(</span><span class="n">UIApplication</span> <span class="o">*</span><span class="p">)</span><span class="nv">application</span> <span class="nf">didFinishLaunchingWithOptions:</span><span class="p">(</span><span class="n">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="nv">launchOptions</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">window</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIWindow</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="p">[[</span><span class="n">UIScreen</span> <span class="n">mainScreen</span><span class="p">]</span> <span class="n">bounds</span><span class="p">]];</span>
</span><span class='line'>
</span><span class='line'><span class="o">--</span> <span class="n">snip</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">]</span> <span class="nl">registerUserNotificationSettings:</span><span class="p">[</span><span class="n">UIUserNotificationSettings</span> <span class="nl">settingsForTypes:</span><span class="p">(</span><span class="n">UIUserNotificationTypeSound</span> <span class="o">|</span> <span class="n">UIUserNotificationTypeAlert</span> <span class="o">|</span> <span class="n">UIUserNotificationTypeBadge</span><span class="p">)</span> <span class="nl">categories:</span><span class="nb">nil</span><span class="p">]];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 6 View Controllers part3]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/19/chapter-6-view-controllers-part3/"/>
    <updated>2014-06-19T17:23:09+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/19/chapter-6-view-controllers-part3</id>
    <content type="html"><![CDATA[<h2>TabBarController</h2>

<p>AppDelegate.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">UIApplicationMain</span>
</span><span class='line'><span class="n">class</span> <span class="nl">AppDelegate:</span> <span class="n">UIResponder</span><span class="p">,</span> <span class="n">UIApplicationDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="nl">window:</span> <span class="n">UIWindow</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">application</span><span class="p">(</span><span class="nl">application:</span> <span class="n">UIApplication</span><span class="p">,</span> <span class="n">didFinishLaunchingWithOptions</span> <span class="nl">launchOptions:</span> <span class="n">NSDictionary</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span> <span class="o">=</span> <span class="n">UIWindow</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">UIScreen</span><span class="p">.</span><span class="n">mainScreen</span><span class="p">().</span><span class="n">bounds</span><span class="p">)</span>
</span><span class='line'>        <span class="c1">// Override point for customization after application launch.</span>
</span><span class='line'>        <span class="n">var</span> <span class="nl">appBundle:</span> <span class="n">NSBundle</span> <span class="o">=</span> <span class="n">NSBundle</span><span class="p">.</span><span class="n">mainBundle</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">hvc</span> <span class="o">=</span> <span class="n">SwiftBNRHypnosisViewController</span><span class="p">(</span><span class="nl">nibName:</span> <span class="s">&quot;SwiftBNRHypnosisViewController&quot;</span><span class="p">,</span> <span class="nl">bundle:</span> <span class="n">appBundle</span><span class="p">)</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">rvc</span> <span class="o">=</span> <span class="n">SwiftBNRReminderViewController</span><span class="p">(</span><span class="nl">nibName:</span> <span class="s">&quot;SwiftBNRReminderViewController&quot;</span><span class="p">,</span> <span class="nl">bundle:</span> <span class="n">appBundle</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">tabBarController</span> <span class="o">=</span> <span class="n">UITabBarController</span><span class="p">();</span>
</span><span class='line'>        <span class="n">tabBarController</span><span class="p">.</span><span class="n">viewControllers</span> <span class="o">=</span> <span class="p">[</span><span class="n">hvc</span><span class="p">,</span> <span class="n">rvc</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">rootViewController</span> <span class="o">=</span> <span class="n">tabBarController</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">whiteColor</span><span class="p">()</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">makeKeyAndVisible</span><span class="p">()</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>SwiftBNRHypnosisViewController.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRHypnosisViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">init</span><span class="p">(</span><span class="n">nibName</span> <span class="nl">nibNameOrNil:</span> <span class="n">String</span><span class="o">?</span><span class="p">,</span> <span class="n">bundle</span> <span class="nl">nibBundleOrNil:</span> <span class="n">NSBundle</span><span class="o">?</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">nibName:</span> <span class="n">nibNameOrNil</span><span class="p">,</span> <span class="nl">bundle:</span> <span class="n">nibBundleOrNil</span><span class="p">)</span>
</span><span class='line'>        <span class="c1">// Custom initialization</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">tabBarItem</span><span class="p">.</span><span class="n">title</span> <span class="o">=</span> <span class="s">&quot;Hypnotise&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">image</span> <span class="o">=</span> <span class="n">UIImage</span><span class="p">(</span><span class="nl">named:</span> <span class="s">&quot;Hypno.png&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">tabBarItem</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="n">image</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>SwiftBNRReminderViewController.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRReminderViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">init</span><span class="p">(</span><span class="n">nibName</span> <span class="nl">nibNameOrNil:</span> <span class="n">String</span><span class="o">?</span><span class="p">,</span> <span class="n">bundle</span> <span class="nl">nibBundleOrNil:</span> <span class="n">NSBundle</span><span class="o">?</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">nibName:</span> <span class="n">nibNameOrNil</span><span class="p">,</span> <span class="nl">bundle:</span> <span class="n">nibBundleOrNil</span><span class="p">)</span>
</span><span class='line'>        <span class="c1">// Custom initialization</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">tabBarItem</span><span class="p">.</span><span class="n">title</span> <span class="o">=</span> <span class="s">&quot;Reminder&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">image</span> <span class="o">=</span> <span class="n">UIImage</span><span class="p">(</span><span class="nl">named:</span> <span class="s">&quot;Hypno.png&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">tabBarItem</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="n">image</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 6 View Controllers part2]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/19/chapter-6-view-controllers-part2/"/>
    <updated>2014-06-19T15:53:41+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/19/chapter-6-view-controllers-part2</id>
    <content type="html"><![CDATA[<h2>Another UIViewController</h2>

<p>SwiftBNRReminderViewController.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRReminderViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBOutlet</span> <span class="n">var</span> <span class="nl">datePicker:</span> <span class="n">UIDatePicker</span>
</span><span class='line'>
</span><span class='line'>    <span class="err">@</span><span class="kt">IBAction</span> <span class="n">func</span> <span class="n">addReminder</span><span class="p">(</span><span class="n">AnyObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">var</span> <span class="nl">date:</span> <span class="n">NSDate</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">datePicker</span><span class="p">.</span><span class="n">date</span><span class="p">;</span>
</span><span class='line'>        <span class="n">println</span><span class="p">(</span><span class="s">&quot;Setting a reminder for \(date)&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>AppDelegate.swif</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">UIApplicationMain</span>
</span><span class='line'><span class="n">class</span> <span class="nl">AppDelegate:</span> <span class="n">UIResponder</span><span class="p">,</span> <span class="n">UIApplicationDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="nl">window:</span> <span class="n">UIWindow</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">application</span><span class="p">(</span><span class="nl">application:</span> <span class="n">UIApplication</span><span class="p">,</span> <span class="n">didFinishLaunchingWithOptions</span> <span class="nl">launchOptions:</span> <span class="n">NSDictionary</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span> <span class="o">=</span> <span class="n">UIWindow</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">UIScreen</span><span class="p">.</span><span class="n">mainScreen</span><span class="p">().</span><span class="n">bounds</span><span class="p">)</span>
</span><span class='line'>        <span class="c1">// Override point for customization after application launch.</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">hvc</span> <span class="o">=</span> <span class="n">SwiftBNRHypnosisViewController</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="nl">appBundle:</span> <span class="n">NSBundle</span> <span class="o">=</span> <span class="n">NSBundle</span><span class="p">.</span><span class="n">mainBundle</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">rvc</span> <span class="o">=</span> <span class="n">SwiftBNRReminderViewController</span><span class="p">(</span><span class="nl">nibName:</span> <span class="s">&quot;SwiftBNRReminderViewController&quot;</span><span class="p">,</span> <span class="nl">bundle:</span> <span class="n">appBundle</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">rootViewController</span> <span class="o">=</span> <span class="n">rvc</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">whiteColor</span><span class="p">()</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">makeKeyAndVisible</span><span class="p">()</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>When setting SwiftBNRReminderViewController.xib&rsquo;s file owner, if SwiftBNRReminderViewController does not appear on the select box, you need to choose something with a strange prefix like _TtC14SwiftHypnoNerd30SwiftBNRReminderViewController.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 6 View Controllers part1]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/18/chapter-6-view-controllers-part1/"/>
    <updated>2014-06-18T19:07:20+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/18/chapter-6-view-controllers-part1</id>
    <content type="html"><![CDATA[<h2>Setting the root view controller</h2>

<p>SwiftBNRHypnosisViewController.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRHypnosisViewController:</span> <span class="n">UIViewController</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">loadView</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">var</span> <span class="nl">frame:</span> <span class="n">CGRect</span> <span class="o">=</span> <span class="n">UIScreen</span><span class="p">.</span><span class="n">mainScreen</span><span class="p">().</span><span class="n">bounds</span>
</span><span class='line'>        <span class="n">var</span> <span class="nl">backgroundView:</span> <span class="n">SwiftBNRHypnosisView</span> <span class="o">=</span> <span class="n">SwiftBNRHypnosisView</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">frame</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="o">=</span> <span class="n">backgroundView</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>AppDelegate.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">UIApplicationMain</span>
</span><span class='line'><span class="n">class</span> <span class="nl">AppDelegate:</span> <span class="n">UIResponder</span><span class="p">,</span> <span class="n">UIApplicationDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="nl">window:</span> <span class="n">UIWindow</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">application</span><span class="p">(</span><span class="nl">application:</span> <span class="n">UIApplication</span><span class="p">,</span> <span class="n">didFinishLaunchingWithOptions</span> <span class="nl">launchOptions:</span> <span class="n">NSDictionary</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span> <span class="o">=</span> <span class="n">UIWindow</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">UIScreen</span><span class="p">.</span><span class="n">mainScreen</span><span class="p">().</span><span class="n">bounds</span><span class="p">)</span>
</span><span class='line'>        <span class="c1">// Override point for customization after application launch.</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="nl">hvc:</span> <span class="n">SwiftBNRHypnosisViewController</span> <span class="o">=</span> <span class="n">SwiftBNRHypnosisViewController</span><span class="p">()</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">rootViewController</span> <span class="o">=</span> <span class="n">hvc</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">whiteColor</span><span class="p">()</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">makeKeyAndVisible</span><span class="p">()</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 5 Views: Redrawing and UIScrollView part3]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/18/chapter-5-views-redrawing-and-uiscrollview-part3/"/>
    <updated>2014-06-18T17:46:53+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/18/chapter-5-views-redrawing-and-uiscrollview-part3</id>
    <content type="html"><![CDATA[<h2>Panning and paging</h2>

<p>AppDelegate.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">class</span> <span class="nl">AppDelegate:</span> <span class="n">UIResponder</span><span class="p">,</span> <span class="n">UIApplicationDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="nl">window:</span> <span class="n">UIWindow</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">application</span><span class="p">(</span><span class="nl">application:</span> <span class="n">UIApplication</span><span class="p">,</span> <span class="n">didFinishLaunchingWithOptions</span> <span class="nl">launchOptions:</span> <span class="n">NSDictionary</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span> <span class="o">=</span> <span class="n">UIWindow</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">UIScreen</span><span class="p">.</span><span class="n">mainScreen</span><span class="p">().</span><span class="n">bounds</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="nl">screenRect:</span> <span class="n">CGRect</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">bounds</span>
</span><span class='line'>        <span class="n">var</span> <span class="nl">bigRect:</span> <span class="n">CGRect</span> <span class="o">=</span> <span class="n">screenRect</span><span class="p">;</span>
</span><span class='line'>        <span class="n">bigRect</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">*=</span> <span class="mf">2.0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="nl">scrollView:</span> <span class="n">UIScrollView</span> <span class="o">=</span> <span class="n">UIScrollView</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">screenRect</span><span class="p">)</span>
</span><span class='line'>        <span class="n">scrollView</span><span class="p">.</span><span class="n">pagingEnabled</span> <span class="o">=</span> <span class="n">true</span><span class="p">;</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">addSubview</span><span class="p">(</span><span class="n">scrollView</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="nl">hynosisView:</span> <span class="n">SwiftBNRHypnosisView</span> <span class="o">=</span> <span class="n">SwiftBNRHypnosisView</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">screenRect</span><span class="p">)</span>
</span><span class='line'>        <span class="n">scrollView</span><span class="p">.</span><span class="n">addSubview</span><span class="p">(</span><span class="n">hynosisView</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">screenRect</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">x</span> <span class="o">+=</span> <span class="n">screenRect</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">;</span>
</span><span class='line'>        <span class="n">var</span> <span class="nl">anotherView:</span> <span class="n">SwiftBNRHypnosisView</span> <span class="o">=</span> <span class="n">SwiftBNRHypnosisView</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">screenRect</span><span class="p">)</span>
</span><span class='line'>        <span class="n">scrollView</span><span class="p">.</span><span class="n">addSubview</span><span class="p">(</span><span class="n">anotherView</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">scrollView</span><span class="p">.</span><span class="n">contentSize</span> <span class="o">=</span> <span class="n">bigRect</span><span class="p">.</span><span class="n">size</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">whiteColor</span><span class="p">()</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">makeKeyAndVisible</span><span class="p">()</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 5 Views: Redrawing and UIScrollView part2]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/18/chapter-5-views-redrawing-and-uiscrollview-part2/"/>
    <updated>2014-06-18T17:33:37+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/18/chapter-5-views-redrawing-and-uiscrollview-part2</id>
    <content type="html"><![CDATA[<h2>Using UIScrollView</h2>

<p>AppDelegate.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">class</span> <span class="nl">AppDelegate:</span> <span class="n">UIResponder</span><span class="p">,</span> <span class="n">UIApplicationDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="nl">window:</span> <span class="n">UIWindow</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">application</span><span class="p">(</span><span class="nl">application:</span> <span class="n">UIApplication</span><span class="p">,</span> <span class="n">didFinishLaunchingWithOptions</span> <span class="nl">launchOptions:</span> <span class="n">NSDictionary</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span> <span class="o">=</span> <span class="n">UIWindow</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">UIScreen</span><span class="p">.</span><span class="n">mainScreen</span><span class="p">().</span><span class="n">bounds</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="nl">screenRect:</span> <span class="n">CGRect</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">bounds</span>
</span><span class='line'>        <span class="n">var</span> <span class="nl">bigRect:</span> <span class="n">CGRect</span> <span class="o">=</span> <span class="n">screenRect</span><span class="p">;</span>
</span><span class='line'>        <span class="n">bigRect</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">*=</span> <span class="mf">2.0</span><span class="p">;</span>
</span><span class='line'>        <span class="n">bigRect</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">*=</span> <span class="mf">2.0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="nl">scrollView:</span> <span class="n">UIScrollView</span> <span class="o">=</span> <span class="n">UIScrollView</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">screenRect</span><span class="p">)</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">addSubview</span><span class="p">(</span><span class="n">scrollView</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="nl">hynosisView:</span> <span class="n">SwiftBNRHypnosisView</span> <span class="o">=</span> <span class="n">SwiftBNRHypnosisView</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">bigRect</span><span class="p">)</span>
</span><span class='line'>        <span class="n">scrollView</span><span class="p">.</span><span class="n">addSubview</span><span class="p">(</span><span class="n">hynosisView</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">scrollView</span><span class="p">.</span><span class="n">contentSize</span> <span class="o">=</span> <span class="n">bigRect</span><span class="p">.</span><span class="n">size</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">whiteColor</span><span class="p">()</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">makeKeyAndVisible</span><span class="p">()</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 5 Views: Redrawing and UIScrollView part1]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/18/chapter-5-views-redrawing-and-uiscrollview-part1/"/>
    <updated>2014-06-18T17:07:11+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/18/chapter-5-views-redrawing-and-uiscrollview-part1</id>
    <content type="html"><![CDATA[<h2>The Run Loop and Redrawing Views</h2>

<p>SwiftBNRHypnosisView.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRHypnosisView:</span> <span class="n">UIView</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="n">circleColor</span> <span class="o">:</span> <span class="n">UIColor</span><span class="o">!</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">init</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">CGRect</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">frame</span><span class="p">)</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">clearColor</span><span class="p">()</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">circleColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">lightGrayColor</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Only override drawRect: if you perform custom drawing.</span>
</span><span class='line'>    <span class="c1">// An empty implementation adversely affects performance during animation.</span>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">drawRect</span><span class="p">(</span><span class="nl">rect:</span> <span class="n">CGRect</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="nl">bounds:</span> <span class="n">CGRect</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">bounds</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">center</span> <span class="o">=</span> <span class="n">CGPoint</span><span class="p">()</span>
</span><span class='line'>        <span class="n">center</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="n">bounds</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">/</span> <span class="mf">2.0</span>
</span><span class='line'>        <span class="n">center</span><span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="n">bounds</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">y</span> <span class="o">+</span> <span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">/</span> <span class="mf">2.0</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">maxRadius</span> <span class="o">=</span> <span class="n">CGFloat</span><span class="p">(</span><span class="n">hypot</span><span class="p">(</span><span class="n">Double</span><span class="p">(</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">),</span> <span class="n">Double</span><span class="p">(</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">))</span> <span class="o">/</span> <span class="mf">2.0</span><span class="p">)</span>
</span><span class='line'>        <span class="n">var</span> <span class="nl">path:</span> <span class="n">UIBezierPath</span> <span class="o">=</span> <span class="n">UIBezierPath</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="n">var</span> <span class="n">currentRadius</span> <span class="o">=</span> <span class="n">maxRadius</span><span class="p">;</span> <span class="n">currentRadius</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span> <span class="n">currentRadius</span> <span class="o">-=</span> <span class="mi">20</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">path</span><span class="p">.</span><span class="n">moveToPoint</span><span class="p">(</span><span class="n">CGPointMake</span><span class="p">(</span><span class="n">center</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="n">currentRadius</span><span class="p">,</span> <span class="n">center</span><span class="p">.</span><span class="n">y</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">path</span><span class="p">.</span><span class="n">addArcWithCenter</span><span class="p">(</span><span class="n">center</span><span class="p">,</span>
</span><span class='line'>                <span class="nl">radius:</span> <span class="n">currentRadius</span><span class="p">,</span>
</span><span class='line'>                <span class="nl">startAngle:</span> <span class="mf">0.0</span><span class="p">,</span>
</span><span class='line'>                <span class="nl">endAngle:</span> <span class="n">Float</span><span class="p">(</span><span class="n">M_PI</span><span class="p">)</span> <span class="o">*</span> <span class="mf">2.0</span><span class="p">,</span>
</span><span class='line'>                <span class="nl">clockwise:</span> <span class="n">true</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">path</span><span class="p">.</span><span class="n">lineWidth</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">circleColor</span><span class="p">.</span><span class="n">setStroke</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">path</span><span class="p">.</span><span class="n">stroke</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">logoImage</span> <span class="o">=</span> <span class="n">UIImage</span><span class="p">(</span><span class="nl">named:</span> <span class="s">&quot;logo.png&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">logoImage</span><span class="p">.</span><span class="n">drawInRect</span><span class="p">(</span><span class="n">CGRectMake</span><span class="p">(</span><span class="n">center</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="p">(</span><span class="n">center</span><span class="p">.</span><span class="n">x</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span>
</span><span class='line'>                                        <span class="n">center</span><span class="p">.</span><span class="n">y</span> <span class="o">-</span> <span class="p">(</span><span class="n">center</span><span class="p">.</span><span class="n">y</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span>
</span><span class='line'>                                        <span class="n">center</span><span class="p">.</span><span class="n">x</span><span class="p">,</span>
</span><span class='line'>                                        <span class="n">center</span><span class="p">.</span><span class="n">y</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">touchesBegan</span><span class="p">(</span><span class="nl">touches:</span> <span class="n">NSSet</span><span class="o">!</span><span class="p">,</span> <span class="n">withEvent</span> <span class="nl">event:</span> <span class="n">UIEvent</span><span class="o">!</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">println</span><span class="p">(</span><span class="s">&quot;\(self.description) was touched&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">red</span> <span class="o">=</span> <span class="n">Double</span><span class="p">(</span><span class="n">arc4random</span><span class="p">()</span> <span class="o">%</span> <span class="mi">100</span><span class="p">)</span> <span class="o">/</span> <span class="mf">100.0</span><span class="p">;</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">green</span> <span class="o">=</span> <span class="n">Double</span><span class="p">(</span><span class="n">arc4random</span><span class="p">()</span> <span class="o">%</span> <span class="mi">100</span><span class="p">)</span> <span class="o">/</span> <span class="mf">100.0</span><span class="p">;</span>
</span><span class='line'>        <span class="n">let</span> <span class="n">blue</span> <span class="o">=</span> <span class="n">Double</span><span class="p">(</span><span class="n">arc4random</span><span class="p">()</span> <span class="o">%</span> <span class="mi">100</span><span class="p">)</span> <span class="o">/</span> <span class="mf">100.0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="nl">randomColor:</span> <span class="n">UIColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">(</span><span class="nl">red:</span> <span class="n">CGFloat</span><span class="p">(</span><span class="n">red</span><span class="p">),</span> <span class="nl">green:</span> <span class="n">CGFloat</span><span class="p">(</span><span class="n">green</span><span class="p">),</span> <span class="nl">blue:</span> <span class="n">CGFloat</span><span class="p">(</span><span class="n">blue</span><span class="p">),</span> <span class="nl">alpha:</span> <span class="n">CGFloat</span><span class="p">(</span><span class="mf">1.0</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">circleColor</span> <span class="o">=</span> <span class="n">randomColor</span><span class="p">;</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">setNeedsDisplay</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 4: Views and the View Hierarchy part3]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/18/chapter-4-views-and-the-view-hierarchy-part3/"/>
    <updated>2014-06-18T16:41:44+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/18/chapter-4-views-and-the-view-hierarchy-part3</id>
    <content type="html"><![CDATA[<h2>Bronze Challenge: Draw an Image</h2>

<p>SwiftBNRHypnosisView.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRHypnosisView:</span> <span class="n">UIView</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="o">--</span> <span class="n">snip</span> <span class="o">--</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">drawRect</span><span class="p">(</span><span class="nl">rect:</span> <span class="n">CGRect</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="o">--</span> <span class="n">snip</span> <span class="o">--</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">path</span><span class="p">.</span><span class="n">stroke</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">logoImage</span> <span class="o">=</span> <span class="n">UIImage</span><span class="p">(</span><span class="nl">named:</span> <span class="s">&quot;logo.png&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">logoImage</span><span class="p">.</span><span class="n">drawInRect</span><span class="p">(</span><span class="n">CGRectMake</span><span class="p">(</span><span class="n">center</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="p">(</span><span class="n">center</span><span class="p">.</span><span class="n">x</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span>
</span><span class='line'>                                        <span class="n">center</span><span class="p">.</span><span class="n">y</span> <span class="o">-</span> <span class="p">(</span><span class="n">center</span><span class="p">.</span><span class="n">y</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span>
</span><span class='line'>                                        <span class="n">center</span><span class="p">.</span><span class="n">x</span><span class="p">,</span>
</span><span class='line'>                                        <span class="n">center</span><span class="p">.</span><span class="n">y</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 4: Views and the View Hierarchy part2]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/18/chapter-4-views-and-the-view-hierarchy-part2/"/>
    <updated>2014-06-18T12:43:52+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/18/chapter-4-views-and-the-view-hierarchy-part2</id>
    <content type="html"><![CDATA[<h2>Drawing concentric circles</h2>

<p>SwiftBNRHypnosisView.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRHypnosisView:</span> <span class="n">UIView</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">init</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">CGRect</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">init</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">frame</span><span class="p">)</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">clearColor</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Only override drawRect: if you perform custom drawing.</span>
</span><span class='line'>    <span class="c1">// An empty implementation adversely affects performance during animation.</span>
</span><span class='line'>    <span class="n">override</span> <span class="n">func</span> <span class="n">drawRect</span><span class="p">(</span><span class="nl">rect:</span> <span class="n">CGRect</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">let</span> <span class="nl">bounds:</span> <span class="n">CGRect</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">bounds</span>
</span><span class='line'>        <span class="n">var</span> <span class="n">center</span> <span class="o">=</span> <span class="n">CGPoint</span><span class="p">()</span>
</span><span class='line'>        <span class="n">center</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="n">bounds</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">/</span> <span class="mf">2.0</span>
</span><span class='line'>        <span class="n">center</span><span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="n">bounds</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">y</span> <span class="o">+</span> <span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">/</span> <span class="mf">2.0</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">let</span> <span class="n">maxRadius</span> <span class="o">=</span> <span class="n">CGFloat</span><span class="p">(</span><span class="n">hypot</span><span class="p">(</span><span class="n">Double</span><span class="p">(</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">),</span> <span class="n">Double</span><span class="p">(</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">))</span> <span class="o">/</span> <span class="mf">2.0</span><span class="p">)</span>
</span><span class='line'>        <span class="n">var</span> <span class="nl">path:</span> <span class="n">UIBezierPath</span> <span class="o">=</span> <span class="n">UIBezierPath</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="n">var</span> <span class="n">currentRadius</span> <span class="o">=</span> <span class="n">maxRadius</span><span class="p">;</span> <span class="n">currentRadius</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span> <span class="n">currentRadius</span> <span class="o">-=</span> <span class="mi">20</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">path</span><span class="p">.</span><span class="n">moveToPoint</span><span class="p">(</span><span class="n">CGPointMake</span><span class="p">(</span><span class="n">center</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="n">currentRadius</span><span class="p">,</span> <span class="n">center</span><span class="p">.</span><span class="n">y</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">path</span><span class="p">.</span><span class="n">addArcWithCenter</span><span class="p">(</span><span class="n">center</span><span class="p">,</span>
</span><span class='line'>                <span class="nl">radius:</span> <span class="n">currentRadius</span><span class="p">,</span>
</span><span class='line'>                <span class="nl">startAngle:</span> <span class="mf">0.0</span><span class="p">,</span>
</span><span class='line'>                <span class="nl">endAngle:</span> <span class="n">Float</span><span class="p">(</span><span class="n">M_PI</span><span class="p">)</span> <span class="o">*</span> <span class="mf">2.0</span><span class="p">,</span>
</span><span class='line'>                <span class="nl">clockwise:</span> <span class="n">true</span><span class="p">)</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">path</span><span class="p">.</span><span class="n">lineWidth</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">UIColor</span><span class="p">.</span><span class="n">lightGrayColor</span><span class="p">().</span><span class="n">setStroke</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">path</span><span class="p">.</span><span class="n">stroke</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>the difficult part was</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">let</span> <span class="n">maxRadius</span> <span class="o">=</span> <span class="n">CGFloat</span><span class="p">(</span><span class="n">hypot</span><span class="p">(</span><span class="n">Double</span><span class="p">(</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">),</span> <span class="n">Double</span><span class="p">(</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">))</span> <span class="o">/</span> <span class="mf">2.0</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>if you do like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">let</span> <span class="n">maxRadius</span> <span class="o">=</span> <span class="n">hypot</span><span class="p">(</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">)</span> <span class="o">/</span> <span class="mf">2.0</span>
</span></code></pre></td></tr></table></div></figure>


<p>it gives you an error</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="err">&#39;</span><span class="n">NSNumber</span><span class="err">&#39;</span> <span class="n">is</span> <span class="n">not</span> <span class="n">a</span> <span class="n">subtype</span> <span class="n">of</span> <span class="err">&#39;</span><span class="n">CDouble</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>I did explicit type cast, with some help from this forum <a href="http://forums.bignerdranch.com/viewtopic.php?f=486&amp;t=8927&amp;p=25283#p25283">Chapter 5 in Swift (including previous challenges)</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 4: Views and the View Hierarchy part1]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/17/chapter-4-views-and-the-view-hierarchy-part1/"/>
    <updated>2014-06-17T17:23:06+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/17/chapter-4-views-and-the-view-hierarchy-part1</id>
    <content type="html"><![CDATA[<h2>Subclassing UIView</h2>

<p>AppDelegate.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">class</span> <span class="nl">AppDelegate:</span> <span class="n">UIResponder</span><span class="p">,</span> <span class="n">UIApplicationDelegate</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="nl">window:</span> <span class="n">UIWindow</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="n">func</span> <span class="n">application</span><span class="p">(</span><span class="nl">application:</span> <span class="n">UIApplication</span><span class="p">,</span> <span class="n">didFinishLaunchingWithOptions</span> <span class="nl">launchOptions:</span> <span class="n">NSDictionary</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span> <span class="o">=</span> <span class="n">UIWindow</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">UIScreen</span><span class="p">.</span><span class="n">mainScreen</span><span class="p">().</span><span class="n">bounds</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="nl">firstFrame:</span> <span class="n">CGRect</span>  <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">160</span><span class="p">,</span> <span class="mi">240</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">150</span><span class="p">)</span>
</span><span class='line'>        <span class="n">var</span> <span class="nl">firstView:</span> <span class="n">SwiftBNRHypnosisView</span> <span class="o">=</span> <span class="n">SwiftBNRHypnosisView</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">firstFrame</span><span class="p">)</span>
</span><span class='line'>        <span class="n">firstView</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">redColor</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">addSubview</span><span class="p">(</span><span class="n">firstView</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">var</span> <span class="nl">secondFrame:</span> <span class="n">CGRect</span>  <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">50</span><span class="p">)</span>
</span><span class='line'>        <span class="n">var</span> <span class="nl">secondView:</span> <span class="n">SwiftBNRHypnosisView</span> <span class="o">=</span> <span class="n">SwiftBNRHypnosisView</span><span class="p">(</span><span class="nl">frame:</span> <span class="n">secondFrame</span><span class="p">)</span>
</span><span class='line'>        <span class="n">secondView</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">blueColor</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//self.window!.addSubview(secondView)</span>
</span><span class='line'>        <span class="n">firstView</span><span class="p">.</span><span class="n">addSubview</span><span class="p">(</span><span class="n">secondView</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">UIColor</span><span class="p">.</span><span class="n">whiteColor</span><span class="p">()</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">window</span><span class="o">!</span><span class="p">.</span><span class="n">makeKeyAndVisible</span><span class="p">()</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">true</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[stop over: strong and weak reference in PHP]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/17/stop-over-strong-and-weak-reference-in-php/"/>
    <updated>2014-06-17T13:45:11+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/17/stop-over-strong-and-weak-reference-in-php</id>
    <content type="html"><![CDATA[<p>How does PHP handle a reference cycle?
Wrote some code for verification.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">class</span> <span class="nc">PHPBNRItem</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">var</span> <span class="nv">$name</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">var</span> <span class="nv">$containedItem</span><span class="p">;</span>
</span><span class='line'>    <span class="k">var</span> <span class="nv">$container</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">function</span> <span class="nf">__construct</span><span class="p">(</span><span class="nv">$name</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">name</span> <span class="o">=</span> <span class="nv">$name</span><span class="p">;</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s2">&quot;Constructing &quot;</span> <span class="o">.</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">name</span> <span class="o">.</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">__destruct</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s2">&quot;Destroying &quot;</span> <span class="o">.</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">name</span> <span class="o">.</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$items</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$backpack</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">PHPBNRItem</span><span class="p">(</span><span class="s2">&quot;Backpack&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$items</span><span class="p">[]</span> <span class="o">=&amp;</span> <span class="nv">$backpack</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$calculator</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">PHPBNRItem</span><span class="p">(</span><span class="s2">&quot;Calculator&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$items</span><span class="p">[]</span> <span class="o">=&amp;</span> <span class="nv">$calculator</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$backpack</span><span class="o">-&gt;</span><span class="na">containedItem</span> <span class="o">=&amp;</span> <span class="nv">$calculator</span><span class="p">;</span>
</span><span class='line'><span class="nv">$calculator</span><span class="o">-&gt;</span><span class="na">container</span> <span class="o">=&amp;</span> <span class="nv">$backpack</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">echo</span> <span class="s1">&#39;&lt;pre&gt;&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nb">var_dump</span><span class="p">(</span><span class="nv">$backpack</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s1">&#39;&lt;/pre&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">unset</span><span class="p">(</span><span class="nv">$items</span><span class="p">);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>output will be like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">Constructing</span> <span class="nx">Backpack</span>
</span><span class='line'><span class="nx">Constructing</span> <span class="nx">Calculator</span>
</span><span class='line'><span class="nx">object</span><span class="p">(</span><span class="nx">PHPBNRItem</span><span class="p">)</span><span class="c1">#1 (3) {</span>
</span><span class='line'>  <span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>  <span class="nx">string</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span> <span class="s2">&quot;Backpack&quot;</span>
</span><span class='line'>  <span class="p">[</span><span class="s2">&quot;containedItem&quot;</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="nx">object</span><span class="p">(</span><span class="nx">PHPBNRItem</span><span class="p">)</span><span class="c1">#2 (3) {</span>
</span><span class='line'>    <span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>    <span class="nx">string</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="s2">&quot;Calculator&quot;</span>
</span><span class='line'>    <span class="p">[</span><span class="s2">&quot;containedItem&quot;</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>    <span class="k">NULL</span>
</span><span class='line'>    <span class="p">[</span><span class="s2">&quot;container&quot;</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>    <span class="o">*</span><span class="nx">RECURSION</span><span class="o">*</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="p">[</span><span class="s2">&quot;container&quot;</span><span class="p">]</span><span class="o">=&gt;</span>
</span><span class='line'>  <span class="k">NULL</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">Destroying</span> <span class="nx">Backpack</span>
</span><span class='line'><span class="nx">Destroying</span> <span class="nx">Calculator</span>
</span></code></pre></td></tr></table></div></figure>


<p>destructor is called OK without any weakrefs.
<code>*RECURSION*</code> suggests that PHP garbage seems to be able to handle a reference cycle?</p>

<blockquote><p>Traditionally, reference counting memory mechanisms, such as that used previously by PHP, fail to address circular reference memory leaks. As of 5.3.0 PHP however implements the synchronous algorithm from the » Concurrent Cycle Collection in Reference Counted Systems paper which addresses that issue.</p></blockquote>

<p><a href="http://www.php.net/manual/en/features.gc.collecting-cycles.php">Collecting Cycles </a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 3: Objective-C in Swift part1]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/17/chapter-3-objective-c-in-swift-part1/"/>
    <updated>2014-06-17T13:28:03+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/17/chapter-3-objective-c-in-swift-part1</id>
    <content type="html"><![CDATA[<h2>Strong and Weak References</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">SwiftBNRItem</span><span class="p">.</span><span class="n">swift</span>
</span><span class='line'><span class="n">class</span> <span class="nl">SwiftBNRItem:</span> <span class="n">NSObject</span> <span class="p">{</span>
</span><span class='line'><span class="o">--</span> <span class="n">snip</span> <span class="o">--</span>
</span><span class='line'>    <span class="n">var</span> <span class="nl">containedItem:</span> <span class="n">SwiftBNRItem</span><span class="o">?</span>
</span><span class='line'>    <span class="n">weak</span> <span class="n">var</span> <span class="nl">container:</span> <span class="n">SwiftBNRItem</span><span class="o">?</span>
</span><span class='line'>
</span><span class='line'><span class="o">--</span> <span class="n">snip</span> <span class="o">--</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Designated initializer for SwiftBNRItem</span>
</span><span class='line'>    <span class="n">init</span><span class="p">(</span><span class="nl">name:</span> <span class="n">String</span> <span class="o">=</span> <span class="s">&quot;Item&quot;</span><span class="p">,</span> <span class="nl">value:</span> <span class="n">Integer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">sNumber:</span> <span class="n">String</span> <span class="o">=</span> <span class="s">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">itemName</span> <span class="o">=</span> <span class="n">name</span>
</span><span class='line'>        <span class="n">serialNumber</span> <span class="o">=</span> <span class="n">sNumber</span>
</span><span class='line'>        <span class="n">valueInDollars</span> <span class="o">=</span> <span class="n">value</span>
</span><span class='line'>        <span class="n">createDate</span> <span class="o">=</span> <span class="n">NSDate</span><span class="p">.</span><span class="n">date</span><span class="p">()</span>
</span><span class='line'>        <span class="n">containedItem</span> <span class="o">=</span> <span class="nb">nil</span>
</span><span class='line'>        <span class="n">container</span> <span class="o">=</span> <span class="nb">nil</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">super</span><span class="p">.</span><span class="n">init</span><span class="p">()</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">--</span> <span class="n">snip</span> <span class="o">-</span>
</span><span class='line'>    <span class="n">deinit</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">println</span><span class="p">(</span><span class="s">&quot;Destroyed: \(self.description)&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>main.swift</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">var</span> <span class="nl">backpack:</span> <span class="n">SwiftBNRItem</span><span class="o">?</span>
</span><span class='line'><span class="n">backpack</span> <span class="o">=</span> <span class="n">SwiftBNRItem</span><span class="p">(</span><span class="nl">name:</span> <span class="s">&quot;Backpack&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">items</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">backpack</span><span class="o">!</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">var</span> <span class="nl">calculator:</span> <span class="n">SwiftBNRItem</span><span class="o">?</span>
</span><span class='line'><span class="n">calculator</span> <span class="o">=</span> <span class="n">SwiftBNRItem</span><span class="p">(</span><span class="nl">name:</span> <span class="s">&quot;Calculator&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">items</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">calculator</span><span class="o">!</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">backpack</span><span class="o">!</span><span class="p">.</span><span class="n">containedItem</span> <span class="o">=</span> <span class="n">calculator</span><span class="p">;</span>
</span><span class='line'><span class="n">calculator</span><span class="o">!</span><span class="p">.</span><span class="n">container</span> <span class="o">=</span> <span class="n">backpack</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">backpack</span> <span class="o">=</span> <span class="nb">nil</span>
</span><span class='line'><span class="n">calculator</span> <span class="o">=</span> <span class="nb">nil</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">item</span> <span class="k">in</span> <span class="n">items</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">println</span><span class="p">(</span><span class="s">&quot;\(item.description)&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">println</span><span class="p">(</span><span class="s">&quot;Setting items to nil...&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">items</span><span class="p">.</span><span class="n">removeAll</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>if you did not put &ldquo;weak&rdquo; keyword, the out put would be like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">Backpack</span> <span class="p">()</span> <span class="o">:</span> <span class="n">Worth</span> <span class="n">$0</span><span class="p">,</span> <span class="n">recorded</span> <span class="n">on</span> <span class="mi">2014</span><span class="o">-</span><span class="mo">06</span><span class="o">-</span><span class="mi">17</span> <span class="mo">04</span><span class="o">:</span><span class="mi">25</span><span class="o">:</span><span class="mi">39</span> <span class="o">+</span><span class="mo">0000</span>
</span><span class='line'><span class="n">Calculator</span> <span class="p">()</span> <span class="o">:</span> <span class="n">Worth</span> <span class="n">$0</span><span class="p">,</span> <span class="n">recorded</span> <span class="n">on</span> <span class="mi">2014</span><span class="o">-</span><span class="mo">06</span><span class="o">-</span><span class="mi">17</span> <span class="mo">04</span><span class="o">:</span><span class="mi">25</span><span class="o">:</span><span class="mi">39</span> <span class="o">+</span><span class="mo">0000</span>
</span><span class='line'><span class="n">Setting</span> <span class="n">items</span> <span class="n">to</span> <span class="nb">nil</span><span class="p">...</span>
</span><span class='line'><span class="n">Program</span> <span class="n">ended</span> <span class="n">with</span> <span class="n">exit</span> <span class="nl">code:</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>


<p>otherwise</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">Backpack</span> <span class="p">()</span> <span class="o">:</span> <span class="n">Worth</span> <span class="n">$0</span><span class="p">,</span> <span class="n">recorded</span> <span class="n">on</span> <span class="mi">2014</span><span class="o">-</span><span class="mo">06</span><span class="o">-</span><span class="mi">17</span> <span class="mo">04</span><span class="o">:</span><span class="mi">33</span><span class="o">:</span><span class="mi">39</span> <span class="o">+</span><span class="mo">0000</span>
</span><span class='line'><span class="n">Calculator</span> <span class="p">()</span> <span class="o">:</span> <span class="n">Worth</span> <span class="n">$0</span><span class="p">,</span> <span class="n">recorded</span> <span class="n">on</span> <span class="mi">2014</span><span class="o">-</span><span class="mo">06</span><span class="o">-</span><span class="mi">17</span> <span class="mo">04</span><span class="o">:</span><span class="mi">33</span><span class="o">:</span><span class="mi">39</span> <span class="o">+</span><span class="mo">0000</span>
</span><span class='line'><span class="n">Setting</span> <span class="n">items</span> <span class="n">to</span> <span class="nb">nil</span><span class="p">...</span>
</span><span class='line'><span class="nl">Destroyed:</span> <span class="n">Backpack</span> <span class="p">()</span> <span class="o">:</span> <span class="n">Worth</span> <span class="n">$0</span><span class="p">,</span> <span class="n">recorded</span> <span class="n">on</span> <span class="mi">2014</span><span class="o">-</span><span class="mo">06</span><span class="o">-</span><span class="mi">17</span> <span class="mo">04</span><span class="o">:</span><span class="mi">33</span><span class="o">:</span><span class="mi">39</span> <span class="o">+</span><span class="mo">0000</span>
</span><span class='line'><span class="nl">Destroyed:</span> <span class="n">Calculator</span> <span class="p">()</span> <span class="o">:</span> <span class="n">Worth</span> <span class="n">$0</span><span class="p">,</span> <span class="n">recorded</span> <span class="n">on</span> <span class="mi">2014</span><span class="o">-</span><span class="mo">06</span><span class="o">-</span><span class="mi">17</span> <span class="mo">04</span><span class="o">:</span><span class="mi">33</span><span class="o">:</span><span class="mi">39</span> <span class="o">+</span><span class="mo">0000</span>
</span><span class='line'><span class="n">Program</span> <span class="n">ended</span> <span class="n">with</span> <span class="n">exit</span> <span class="nl">code:</span> <span class="mi">0</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chapter 2: Objective-C in Swift part5]]></title>
    <link href="http://takaakik.github.io/blog/2014/06/13/chapter-2-objective-c-in-swift-part5/"/>
    <updated>2014-06-13T18:13:22+09:00</updated>
    <id>http://takaakik.github.io/blog/2014/06/13/chapter-2-objective-c-in-swift-part5</id>
    <content type="html"><![CDATA[<p><em>iOS Programming:The Big Nerd Ranch Guide, 4th Edition</em> has <em>For the More Curious</em> part at the end of every chapter and for the chapter 2 it&rsquo;s <em>Class Names</em>. It explains about the importance of class prefixes for avoiding name collision in objective-C since it has no namespace implemented. It seems that the new Xcode6-beta deleted setting for class prefixes. Maybe the reason why is that Swift has namespaces?</p>
]]></content>
  </entry>
  
</feed>
